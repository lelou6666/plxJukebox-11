#!/bin/sh

SAVED_ARGS="$@"
prefix="/usr/local"
exec_prefix="${prefix}"
datarootdir="${prefix}/share"
LIBDIR="${exec_prefix}/lib"

# Check for some options used by this script
while [ "$#" -gt "0" ]
do
    case "$1" in
        --setlibdir)
            LIBDIR="$2"
            shift; shift
            ;;
        *)
            shift
            ;;
    esac
done

single_stacktrace()
{
  # core filename is either "core.$PID" or "core"
  find "$1" -maxdepth $2 -name 'core*' | while read core; do
      LC_ALL=C gdb --core="$core" --batch 2> /dev/null | grep -q "^Core was generated by \`$LIBDIR/raven/plxJukebox.bin" || continue
      echo "=====>  Core file: "$core" ($(stat -c%y "$core"))" >> $FILE
      echo "        =========================================" >> $FILE
      gdb "$LIBDIR/raven/plxJukebox.bin" --core="$core" --batch -ex "thread apply all bt" 2> /dev/null >> $FILE
      rm -f "$core"
  done
}

print_crash_report()
{
  FILE="$HOME/raven_crashlog-`date +%Y%m%d_%H%M%S`.log"
  echo "############## RAVEN CRASH LOG ###############" >> $FILE
  echo >> $FILE
  echo "################ SYSTEM INFO ################" >> $FILE
  echo -n " Date: " >> $FILE
  date >> $FILE
  echo " Raven Options: $*" >> $FILE
  echo -n " Arch: " >> $FILE
  uname -m >> $FILE
  echo -n " Kernel: " >> $FILE
  uname -rvs >> $FILE
  echo -n " Release: " >> $FILE
  if which lsb_release > /dev/null; then
    echo >> $FILE
    lsb_release -a 2> /dev/null | sed -e 's/^/    /' >> $FILE
  else
    echo "lsb_release not available" >> $FILE
  fi
  echo "############## END SYSTEM INFO ##############" >> $FILE
  echo >> $FILE
  echo "############### STACK TRACE #################" >> $FILE
  if which gdb >/dev/null 2>&1; then
    single_stacktrace "$PWD" 1
    # Find in plugins directories
    if [ $XBMC_HOME ]; then
      BASEDIR=$XBMC_HOME
    else
      BASEDIR="$LIBDIR/raven/"
    fi
    single_stacktrace "$BASEDIR" 5
    # find in user raven dir
    single_stacktrace $HOME/.raven/ 5
  else
    echo "gdb not installed, can't get stack trace." >> $FILE
  fi
  echo "############# END STACK TRACE ###############" >> $FILE
  echo >> $FILE
  echo "################# LOG FILE ##################" >> $FILE
  echo >> $FILE
  if [ -f ~/.raven/temp/raven.log ]
  then
    cat ~/.raven/temp/raven.log >> $FILE
    echo >> $FILE
  else
    echo "Logfile not found in the usual place." >> $FILE
    echo "Please attach it seperately." >> $FILE
    echo "Use pastebin.com or similar for forums or IRC." >> $FILE
  fi
  echo >> $FILE
  echo "############### END LOG FILE ################" >> $FILE
  echo >> $FILE
  echo "############ END XBMC CRASH LOG #############" >> $FILE
  echo "Crash report available at $FILE"
}

python ${datarootdir}/plxJukebox/FEH.py $SAVED_ARGS
RET=$?
if [ $RET -ne 0 ]; then
  exit $RET
fi

if which gdb >/dev/null 2>&1; then
  # Output warning in case ulimit is unsupported by shell
  eval ulimit -c unlimited
  if [ ! $? = "0" ]; then
    echo "raven: ulimit is unsupported by this shell" 1>&2
  fi
fi

LOOP=1
while [ $(( $LOOP )) = "1" ]
do
  LOOP=0
  "$LIBDIR/raven/plxJukebox.bin" $SAVED_ARGS
  RET=$?
  if [ $(( $RET == 65 )) = "1" ]
  then # User requested to restart app
    LOOP=1
  elif [ $(( ($RET >= 131 && $RET <= 136) || $RET == 139 )) = "1" ]
  then # Crashed with core dump
    print_crash_report
  fi
done

exit $RET
